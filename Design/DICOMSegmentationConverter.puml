@startuml

title ITK image -> DCM segmentation, DCM segmentation -> ITK image

package Metadata <<Rectangle>> {
    package JSON <<Database>> {
        note as metaNote
          - series
          - segment(s)
        end note
    }
    package CSV(future) <<Database>> {
    }
}

package Segmentation(s) <<Rectangle>>{
    package NRRD <<Database>> {
    }
    package ITK <<Database>> {
    }
    package DICOM <<Database>>{
    }
}

package ReferenceImage(s) as ReferenceImage <<Rectangle>> {
    package DICOM as DICOM1 <<Database>>{
    }
}

package dcmqi {

    DCMQI ---* SegmentInformationJSONHandler: use
    DCMQI ---* DCMQIHelper : use

    SegmentInformationJSONHandler -* SegmentAttributes : use

    dcmqi -> JSON : read/write
    dcmqi -> DICOM: read/write
    dcmqi -> DICOM1: read

    dcmqi -> ITK: read
    dcmqi -> NRRD: write

    SegmentAttributes -*  DCMQIHelper : use
}

class DCMQIHelper {
    + {static} TokenizeString(string str, vector<string> &tokens, string delimiter): void
    + {static} SplitString(string str, string &head, string &tail, string delimiter): void
    + {static} FloatToStrScientific(float f): string
---
    + {static} StringToCodeSequenceMacro(std::string str): CodeSequenceMacro
    + {static} StringToDSRCodedEntryValue(std::string str): DSRCodedEntryValue
---
    + {static} getCIEXYZFromRGB(unsigned *rgb, float *cieXYZ): float*
    + {static} getRGBFromCIEXYZ(float* cieXYZ, unsigned *rgb): unsigned*
    + {static} getCIELabFromCIEXYZ(float *cieXYZ, float *cieLab): float*
    + {static} getCIEXYZFromCIELab(float *cieLab, float *cieXYZ): float*
    + {static} getIntegerScaledCIELabFromCIELab(float *cieLab, unsigned *cieLabScaled): unsigned*
    + {static} getCIELabFromIntegerScaledCIELab(unsigned* cieLabScaled, float* cieLab): float*
}

class DCMQI {
    + {static} itkimage2dcmSegmentation(dcmImages, itkimages, jsonMetaFile, outputFileName)
    + {static} dcmSegmentation2itkimage(dcmImage, ...)
---
    - allOtherMethods()
}

class SegmentInformationJSONHandler {
    + attributes : SegmentAttributes[]
    - filename : const char*
---
    + SegmentInformationJSONHandler()
    + SegmentInformationJSONHandler(const char* filename)
    + write(const char* filename) : bool
---
    - read() : bool
}

class SegmentAttributes {
    - labelID : unsigned
    - attributesDictionary : map<string, string>
---
    + setLabelID(unsigned labelID) : void
    + lookupAttribute(string key) : string
    + populateAttributesFromString(string attributesStr) : int
    + PrintSelf() : void
}

@enduml